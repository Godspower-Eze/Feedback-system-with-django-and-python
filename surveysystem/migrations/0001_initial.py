# Generated by Django 3.0.5 on 2020-06-24 14:16

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_student', models.BooleanField(default=False)),
                ('is_teacher', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'surveysystem',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Class',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_name', models.CharField(choices=[('JSS1', 'JSS1'), ('JSS2', 'JSS2'), ('JSS2', 'JSS3')], max_length=100)),
                ('num_of_students', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Classes',
            },
        ),
        migrations.CreateModel(
            name='SurveyInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('survey_image', models.ImageField(default='default.png', upload_to='survey_images')),
                ('survey_title', models.CharField(max_length=100)),
                ('survey_info', models.TextField()),
                ('survey_textarea_question', models.CharField(default='1', max_length=200)),
            ],
            options={
                'verbose_name_plural': 'Survey Info',
            },
        ),
        migrations.CreateModel(
            name='StudentProfile',
            fields=[
                ('student', models.OneToOneField(limit_choices_to={'is_student': True}, on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('other_names', models.CharField(blank=True, max_length=100, verbose_name='Other Names')),
                ('student_image', models.ImageField(default='default.jpg', upload_to='student_images')),
                ('guardians_name', models.CharField(blank=True, max_length=150, verbose_name='Name Of Guardian')),
                ('my_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='surveysystem.Class')),
            ],
            options={
                'verbose_name_plural': 'Student Profile',
            },
        ),
        migrations.CreateModel(
            name='TeachersProfile',
            fields=[
                ('teacher', models.OneToOneField(limit_choices_to={'is_teacher': True}, on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('other_names', models.CharField(max_length=100, verbose_name='Other Names')),
                ('teacher_image', models.ImageField(default='default.jpg', upload_to='teachers_images')),
                ('qualification', models.CharField(choices=[('bsc', 'Bsc'), ('msc', 'Msc'), ('phd', 'Phd')], max_length=100, verbose_name='Qualification')),
                ('relationship', models.CharField(choices=[('single', 'Single'), ('married', 'Married')], max_length=100, verbose_name='Relationship Status')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Teachers Profiles',
            },
        ),
        migrations.CreateModel(
            name='SurveyQ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('survey_question', models.CharField(max_length=500)),
                ('survey_info', models.ForeignKey(default='1', on_delete=django.db.models.deletion.CASCADE, to='surveysystem.SurveyInfo')),
            ],
            options={
                'verbose_name_plural': 'Survey Questions',
            },
        ),
        migrations.CreateModel(
            name='SurveyChoices',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choice', models.CharField(max_length=100)),
                ('survey_question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='surveysystem.SurveyQ')),
            ],
        ),
        migrations.AddField(
            model_name='surveyinfo',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='surveysystem.TeachersProfile'),
        ),
        migrations.CreateModel(
            name='SurveyAnswers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('normal_answer', models.CharField(blank=True, max_length=100, null=True)),
                ('survey_textarea_answer', models.CharField(blank=True, max_length=100, null=True)),
                ('survey_question', models.ForeignKey(default='1', on_delete=django.db.models.deletion.CASCADE, to='surveysystem.SurveyQ')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='surveysystem.StudentProfile')),
            ],
        ),
        migrations.CreateModel(
            name='Subjects',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_name', models.CharField(max_length=100)),
                ('classes', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='surveysystem.Class')),
                ('students', models.ManyToManyField(to='surveysystem.StudentProfile')),
                ('teachers', models.ManyToManyField(blank=True, to='surveysystem.TeachersProfile')),
            ],
            options={
                'verbose_name_plural': 'Subjects',
            },
        ),
        migrations.AddField(
            model_name='studentprofile',
            name='teachers',
            field=models.ManyToManyField(blank=True, to='surveysystem.TeachersProfile'),
        ),
        migrations.AddField(
            model_name='class',
            name='teachers',
            field=models.ManyToManyField(blank=True, to='surveysystem.TeachersProfile'),
        ),
    ]
